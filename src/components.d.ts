/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface DevmodeWc {
        "allowedOrigin"?: string;
    }
}
export interface DevmodeWcCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDevmodeWcElement;
}
declare global {
    interface HTMLDevmodeWcElementEventMap {
        "pillToggled": boolean;
    }
    interface HTMLDevmodeWcElement extends Components.DevmodeWc, HTMLStencilElement {
        addEventListener<K extends keyof HTMLDevmodeWcElementEventMap>(type: K, listener: (this: HTMLDevmodeWcElement, ev: DevmodeWcCustomEvent<HTMLDevmodeWcElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLDevmodeWcElementEventMap>(type: K, listener: (this: HTMLDevmodeWcElement, ev: DevmodeWcCustomEvent<HTMLDevmodeWcElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLDevmodeWcElement: {
        prototype: HTMLDevmodeWcElement;
        new (): HTMLDevmodeWcElement;
    };
    interface HTMLElementTagNameMap {
        "devmode-wc": HTMLDevmodeWcElement;
    }
}
declare namespace LocalJSX {
    interface DevmodeWc {
        "allowedOrigin"?: string;
        "onPillToggled"?: (event: DevmodeWcCustomEvent<boolean>) => void;
    }
    interface IntrinsicElements {
        "devmode-wc": DevmodeWc;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "devmode-wc": LocalJSX.DevmodeWc & JSXBase.HTMLAttributes<HTMLDevmodeWcElement>;
        }
    }
}
